{
  "compilerOptions": {
    "allowSyntheticDefaultImports": true,
    "target": "esnext",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": [
      "ES5",
      "ES6",
      "ES2015",
      "ES2015.Iterable",
      "ES2015.Promise",
      "ES2016",
      "ES2017",
      "ES2019",
      "ES2020",
      "ESNext"
    ],                                                   /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "sourceMap": true,
    "experimentalDecorators": true,                      /* Enable experimental support for legacy experimental decorators. */
    "module": "esnext",                                  /* Specify what module code is generated. */
    "rootDir": "./src/",                                 /* Specify the root folder within your source files. */
    "moduleResolution": "node",                          /* Specify how TypeScript looks up a file from a given module specifier. */
    "resolveJsonModule": true,                           /* Enable importing .json files. */
    "allowJs": true,                                     /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    "declaration": true,                                 /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "outDir": "./lib/",                                  /* Specify an output folder for all emitted files. */
    "isolatedModules": false,                            /* Ensure that each file can be safely transpiled without relying on other imports. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noImplicitThis": true,                              /* Enable error reporting when 'this' is given the type 'any'. */
    "exactOptionalPropertyTypes": true,                  /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true,                           /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noImplicitOverride": true,                          /* Ensure overriding members in derived classes are marked with an override modifier. */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  },
  "include": ["./src/**/*.ts"],
  "exclude": ["./node_modules", "./lib"],
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node"
  }
}
